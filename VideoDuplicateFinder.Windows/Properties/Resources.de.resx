<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CopyingFiles" xml:space="preserve">
    <value>Dateien kopieren ...</value>
  </data>
  <data name="FailedToCopySomeFilesPleaseCheckLog" xml:space="preserve">
    <value>Einige Dateien konnten nicht kopiert werden. Bitte prüfen Sie das Protokoll!</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Warnung</value>
  </data>
  <data name="DeleteAllCheckedItemsFromDISKToRecycleBinIfPossible" xml:space="preserve">
    <value>Alle markierten Elemente von der Festplatte löschen (wenn möglich in den Papierkorb)?</value>
  </data>
  <data name="Confirmation" xml:space="preserve">
    <value>Bestätigung</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="EnumeratingInputFolders" xml:space="preserve">
    <value>Eingabeordner auflisten ...</value>
  </data>
  <data name="OpenInFolder" xml:space="preserve">
    <value>In Ordner öffnen</value>
  </data>
  <data name="ToRecycleBin" xml:space="preserve">
    <value>Papierkorb</value>
  </data>
  <data name="FromListKeepFiles" xml:space="preserve">
    <value>Aus der Liste (Dateien behalten)</value>
  </data>
  <data name="ExpandAll" xml:space="preserve">
    <value>Alle erweitern</value>
  </data>
  <data name="CollapseAll" xml:space="preserve">
    <value>Alles einklappen</value>
  </data>
  <data name="Groups" xml:space="preserve">
    <value>Gruppen</value>
  </data>
  <data name="DeleteChecked" xml:space="preserve">
    <value>Löschen markiert</value>
  </data>
  <data name="DuplicatesInList" xml:space="preserve">
    <value>Duplikate in der Liste:</value>
  </data>
  <data name="TotalDuplicates" xml:space="preserve">
    <value>Gesamtzahl der Duplikate:</value>
  </data>
  <data name="TotalDuplicateGroups" xml:space="preserve">
    <value>Doppelte Gruppen insgesamt:</value>
  </data>
  <data name="TotalSize" xml:space="preserve">
    <value>Gesamtgröße:</value>
  </data>
  <data name="TotalSizeRemoved" xml:space="preserve">
    <value>Gesamtgröße entfernt:</value>
  </data>
  <data name="Log" xml:space="preserve">
    <value>Log</value>
  </data>
  <data name="ClearLog" xml:space="preserve">
    <value>Protokoll löschen</value>
  </data>
  <data name="CopyLogToClipboard" xml:space="preserve">
    <value>Protokoll in die Zwischenablage kopieren</value>
  </data>
  <data name="PleaseWait" xml:space="preserve">
    <value>Bitte warten...</value>
  </data>
  <data name="Scanner" xml:space="preserve">
    <value>Scanner</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="Resume" xml:space="preserve">
    <value>Fortsetzen</value>
  </data>
  <data name="Pause" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="Stop" xml:space="preserve">
    <value>Halt</value>
  </data>
  <data name="IgnoreReadOnlyFolders" xml:space="preserve">
    <value>Schreibgeschützte Ordner ignorieren</value>
  </data>
  <data name="IncludeSubDirectories" xml:space="preserve">
    <value>Unterverzeichnisse einschließen</value>
  </data>
  <data name="SearchDirectories" xml:space="preserve">
    <value>Verzeichnisse durchsuchen</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Hinzufügen</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Löschen</value>
  </data>
  <data name="ExcludeDirectories" xml:space="preserve">
    <value>Verzeichnisse ausschließen</value>
  </data>
  <data name="Selection" xml:space="preserve">
    <value>Auswahl</value>
  </data>
  <data name="Select100IdenticalKeepFirst" xml:space="preserve">
    <value>Wähle 100% identisch (Behalte ersten)</value>
  </data>
  <data name="Select100IdenticalExceptSizeKeepSmallest" xml:space="preserve">
    <value>Wählen 100% identisch außer Größe (Behalte Kleinsten)</value>
  </data>
  <data name="SelectLowestDurationLowestQualityKeepLongestBestQuality" xml:space="preserve">
    <value>Wählen Sie Niedrigste Dauer / Niedrigste Qualität (Am längsten halten / Beste Qualität)</value>
  </data>
  <data name="DeleteSelection" xml:space="preserve">
    <value>Auswahl löschen</value>
  </data>
  <data name="CopyToFolderKeepFiles" xml:space="preserve">
    <value>In Ordner kopieren (Dateien behalten)</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Sichern</value>
  </data>
  <data name="ToHtml" xml:space="preserve">
    <value>Zu Html</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="Path" xml:space="preserve">
    <value>Pfad:</value>
  </data>
  <data name="ClearSelection" xml:space="preserve">
    <value>Auswahl löschen</value>
  </data>
  <data name="MoveToFolder" xml:space="preserve">
    <value>In den Ordner verschieben</value>
  </data>
  <data name="IncludeImages" xml:space="preserve">
    <value>Bilder einschließen</value>
  </data>
  <data name="ElapsedTime" xml:space="preserve">
    <value>Verstrichene Zeit:</value>
  </data>
  <data name="RemainingTime" xml:space="preserve">
    <value>Verbleibende Zeit:</value>
  </data>
  <data name="FFmpegExeFFprobeExeIsMissing" xml:space="preserve">
    <value>FFmpeg.exe / FFprobe.exe fehlt. Stellen Sie sicher, dass sich beide im selben Verzeichnis wie diese Anwendung befinden.</value>
  </data>
  <data name="CleaningUp" xml:space="preserve">
    <value>Aufräumen...</value>
  </data>
  <data name="Sort_SizeAscending" xml:space="preserve">
    <value>Größe aufsteigend</value>
  </data>
  <data name="Sort_SizeDescending" xml:space="preserve">
    <value>Größe absteigend</value>
  </data>
  <data name="Sort_ResolutionAscending" xml:space="preserve">
    <value>Auflösung aufsteigend</value>
  </data>
  <data name="Sort_ResolutionDescending" xml:space="preserve">
    <value>Auflösung absteigend</value>
  </data>
  <data name="Sort_DurationAscending" xml:space="preserve">
    <value>Dauer aufsteigend</value>
  </data>
  <data name="Sort_DurationDescending" xml:space="preserve">
    <value>Dauer absteigend</value>
  </data>
  <data name="Sort_DateCreatedAscending" xml:space="preserve">
    <value>Erstellungsdatum aufsteigend</value>
  </data>
  <data name="Sort_DateCreatedDescending" xml:space="preserve">
    <value>Erstellungsdatum absteigend</value>
  </data>
  <data name="Sort_None" xml:space="preserve">
    <value>Keiner</value>
  </data>
  <data name="Sort" xml:space="preserve">
    <value>Sortieren</value>
  </data>
  <data name="FileTypeFilter_All" xml:space="preserve">
    <value>Alles</value>
  </data>
  <data name="FileTypeFilter_Videos" xml:space="preserve">
    <value>Videos</value>
  </data>
  <data name="FileTypeFilter_Images" xml:space="preserve">
    <value>Bilder</value>
  </data>
  <data name="FileType" xml:space="preserve">
    <value>Dateityp</value>
  </data>
  <data name="ExportingDatabaseVideosToCSV" xml:space="preserve">
    <value>Datenbank nach CSV exportieren ...</value>
  </data>
  <data name="Database" xml:space="preserve">
    <value>Datenbank</value>
  </data>
  <data name="CleanupDatabase" xml:space="preserve">
    <value>Datenbank bereinigen</value>
  </data>
  <data name="ExportDatabaseVideosToCSV" xml:space="preserve">
    <value>Exportieren Sie Datenbankvideos nach CSV</value>
  </data>
  <data name="LatestRelease" xml:space="preserve">
    <value>Neueste Erscheinung</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="Percent" xml:space="preserve">
    <value>Prozent:</value>
  </data>
  <data name="ExportDatabaseExcluded" xml:space="preserve">
    <value>Export nach CSV ausgeschlossen</value>
  </data>
</root>